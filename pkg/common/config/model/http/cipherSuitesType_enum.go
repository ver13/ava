// Code generated by go-enum
// DO NOT EDIT!

package http

import (
	"fmt"
	"strings"
)

const (
	// CipherSuitesTypeTLSRSAWITHRC4128SHA is a CipherSuitesType of type TLS_RSA_WITH_RC4_128_SHA
	CipherSuitesTypeTLSRSAWITHRC4128SHA CipherSuitesType = iota + 5
	// CipherSuitesTypeTLSRSAWITH3DESEDECBCSHA is a CipherSuitesType of type TLS_RSA_WITH_3DES_EDE_CBC_SHA
	CipherSuitesTypeTLSRSAWITH3DESEDECBCSHA CipherSuitesType = iota + 9
	// CipherSuitesTypeTLSRSAWITHAES128CBCSHA is a CipherSuitesType of type TLS_RSA_WITH_AES_128_CBC_SHA
	CipherSuitesTypeTLSRSAWITHAES128CBCSHA CipherSuitesType = iota + 45
	// CipherSuitesTypeTLSRSAWITHAES256CBCSHA is a CipherSuitesType of type TLS_RSA_WITH_AES_256_CBC_SHA
	CipherSuitesTypeTLSRSAWITHAES256CBCSHA CipherSuitesType = iota + 50
	// CipherSuitesTypeTLSRSAWITHAES128CBCSHA256 is a CipherSuitesType of type TLS_RSA_WITH_AES_128_CBC_SHA256
	CipherSuitesTypeTLSRSAWITHAES128CBCSHA256 CipherSuitesType = iota + 56
	// CipherSuitesTypeTLSRSAWITHAES128GCMSHA256 is a CipherSuitesType of type TLS_RSA_WITH_AES_128_GCM_SHA256
	CipherSuitesTypeTLSRSAWITHAES128GCMSHA256 CipherSuitesType = iota + 151
	// CipherSuitesTypeTLSRSAWITHAES256GCMSHA384 is a CipherSuitesType of type TLS_RSA_WITH_AES_256_GCM_SHA384
	CipherSuitesTypeTLSRSAWITHAES256GCMSHA384
	// CipherSuitesTypeTLSECDHEECDSAWITHRC4128SHA is a CipherSuitesType of type TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
	CipherSuitesTypeTLSECDHEECDSAWITHRC4128SHA CipherSuitesType = iota + 49152
	// CipherSuitesTypeTLSECDHEECDSAWITHAES128CBCSHA is a CipherSuitesType of type TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
	CipherSuitesTypeTLSECDHEECDSAWITHAES128CBCSHA CipherSuitesType = iota + 49153
	// CipherSuitesTypeTLSECDHEECDSAWITHAES256CBCSHA is a CipherSuitesType of type TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
	CipherSuitesTypeTLSECDHEECDSAWITHAES256CBCSHA
	// CipherSuitesTypeTLSECDHERSAWITHRC4128SHA is a CipherSuitesType of type TLS_ECDHE_RSA_WITH_RC4_128_SHA
	CipherSuitesTypeTLSECDHERSAWITHRC4128SHA CipherSuitesType = iota + 49159
	// CipherSuitesTypeTLSECDHERSAWITH3DESEDECBCSHA is a CipherSuitesType of type TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
	CipherSuitesTypeTLSECDHERSAWITH3DESEDECBCSHA
	// CipherSuitesTypeTLSECDHERSAWITHAES128CBCSHA is a CipherSuitesType of type TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
	CipherSuitesTypeTLSECDHERSAWITHAES128CBCSHA
	// CipherSuitesTypeTLSECDHERSAWITHAES256CBCSHA is a CipherSuitesType of type TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
	CipherSuitesTypeTLSECDHERSAWITHAES256CBCSHA
	// CipherSuitesTypeTLSECDHEECDSAWITHAES128CBCSHA256 is a CipherSuitesType of type TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
	CipherSuitesTypeTLSECDHEECDSAWITHAES128CBCSHA256 CipherSuitesType = iota + 49173
	// CipherSuitesTypeTLSECDHERSAWITHAES128CBCSHA256 is a CipherSuitesType of type TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
	CipherSuitesTypeTLSECDHERSAWITHAES128CBCSHA256 CipherSuitesType = iota + 49176
	// CipherSuitesTypeTLSECDHERSAWITHAES128GCMSHA256 is a CipherSuitesType of type TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
	CipherSuitesTypeTLSECDHERSAWITHAES128GCMSHA256 CipherSuitesType = iota + 49183
	// CipherSuitesTypeTLSECDHEECDSAWITHAES128GCMSHA256 is a CipherSuitesType of type TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
	CipherSuitesTypeTLSECDHEECDSAWITHAES128GCMSHA256 CipherSuitesType = iota + 49178
	// CipherSuitesTypeTLSECDHERSAWITHAES256GCMSHA384 is a CipherSuitesType of type TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	CipherSuitesTypeTLSECDHERSAWITHAES256GCMSHA384 CipherSuitesType = iota + 49182
	// CipherSuitesTypeTLSECDHEECDSAWITHAES256GCMSHA384 is a CipherSuitesType of type TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
	CipherSuitesTypeTLSECDHEECDSAWITHAES256GCMSHA384 CipherSuitesType = iota + 49177
	// CipherSuitesTypeTLSECDHERSAWITHCHACHA20POLY1305 is a CipherSuitesType of type TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
	CipherSuitesTypeTLSECDHERSAWITHCHACHA20POLY1305 CipherSuitesType = iota + 52372
	// CipherSuitesTypeTLSECDHEECDSAWITHCHACHA20POLY1305 is a CipherSuitesType of type TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
	CipherSuitesTypeTLSECDHEECDSAWITHCHACHA20POLY1305
	// CipherSuitesTypeTLSAES128GCMSHA256 is a CipherSuitesType of type TLS_AES_128_GCM_SHA256
	CipherSuitesTypeTLSAES128GCMSHA256 CipherSuitesType = iota + 4843
	// CipherSuitesTypeTLSAES256GCMSHA384 is a CipherSuitesType of type TLS_AES_256_GCM_SHA384
	CipherSuitesTypeTLSAES256GCMSHA384
	// CipherSuitesTypeTLSCHACHA20POLY1305SHA256 is a CipherSuitesType of type TLS_CHACHA20_POLY1305_SHA256
	CipherSuitesTypeTLSCHACHA20POLY1305SHA256
	// CipherSuitesTypeTLSFALLBACKSCSV is a CipherSuitesType of type TLS_FALLBACK_SCSV
	CipherSuitesTypeTLSFALLBACKSCSV CipherSuitesType = iota + 21991
)

const _CipherSuitesTypeName = "TLS_RSA_WITH_RC4_128_SHATLS_RSA_WITH_3DES_EDE_CBC_SHATLS_RSA_WITH_AES_128_CBC_SHATLS_RSA_WITH_AES_256_CBC_SHATLS_RSA_WITH_AES_128_CBC_SHA256TLS_RSA_WITH_AES_128_GCM_SHA256TLS_RSA_WITH_AES_256_GCM_SHA384TLS_ECDHE_ECDSA_WITH_RC4_128_SHATLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHATLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHATLS_ECDHE_RSA_WITH_RC4_128_SHATLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHATLS_ECDHE_RSA_WITH_AES_128_CBC_SHATLS_ECDHE_RSA_WITH_AES_256_CBC_SHATLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305TLS_AES_128_GCM_SHA256TLS_AES_256_GCM_SHA384TLS_CHACHA20_POLY1305_SHA256TLS_FALLBACK_SCSV"

var _CipherSuitesTypeMap = map[CipherSuitesType]string{
	5:     _CipherSuitesTypeName[0:24],
	10:    _CipherSuitesTypeName[24:53],
	47:    _CipherSuitesTypeName[53:81],
	53:    _CipherSuitesTypeName[81:109],
	60:    _CipherSuitesTypeName[109:140],
	156:   _CipherSuitesTypeName[140:171],
	157:   _CipherSuitesTypeName[171:202],
	49159: _CipherSuitesTypeName[202:234],
	49161: _CipherSuitesTypeName[234:270],
	49162: _CipherSuitesTypeName[270:306],
	49169: _CipherSuitesTypeName[306:336],
	49170: _CipherSuitesTypeName[336:371],
	49171: _CipherSuitesTypeName[371:405],
	49172: _CipherSuitesTypeName[405:439],
	49187: _CipherSuitesTypeName[439:478],
	49191: _CipherSuitesTypeName[478:515],
	49199: _CipherSuitesTypeName[515:552],
	49195: _CipherSuitesTypeName[552:591],
	49200: _CipherSuitesTypeName[591:628],
	49196: _CipherSuitesTypeName[628:667],
	52392: _CipherSuitesTypeName[667:703],
	52393: _CipherSuitesTypeName[703:741],
	4865:  _CipherSuitesTypeName[741:763],
	4866:  _CipherSuitesTypeName[763:785],
	4867:  _CipherSuitesTypeName[785:813],
	22016: _CipherSuitesTypeName[813:830],
}

// String implements the Stringer interface.
func (x CipherSuitesType) String() string {
	if str, ok := _CipherSuitesTypeMap[x]; ok {
		return str
	}
	return fmt.Sprintf("CipherSuitesType(%d)", x)
}

var _CipherSuitesTypeValue = map[string]CipherSuitesType{
	_CipherSuitesTypeName[0:24]:                     5,
	strings.ToLower(_CipherSuitesTypeName[0:24]):    5,
	_CipherSuitesTypeName[24:53]:                    10,
	strings.ToLower(_CipherSuitesTypeName[24:53]):   10,
	_CipherSuitesTypeName[53:81]:                    47,
	strings.ToLower(_CipherSuitesTypeName[53:81]):   47,
	_CipherSuitesTypeName[81:109]:                   53,
	strings.ToLower(_CipherSuitesTypeName[81:109]):  53,
	_CipherSuitesTypeName[109:140]:                  60,
	strings.ToLower(_CipherSuitesTypeName[109:140]): 60,
	_CipherSuitesTypeName[140:171]:                  156,
	strings.ToLower(_CipherSuitesTypeName[140:171]): 156,
	_CipherSuitesTypeName[171:202]:                  157,
	strings.ToLower(_CipherSuitesTypeName[171:202]): 157,
	_CipherSuitesTypeName[202:234]:                  49159,
	strings.ToLower(_CipherSuitesTypeName[202:234]): 49159,
	_CipherSuitesTypeName[234:270]:                  49161,
	strings.ToLower(_CipherSuitesTypeName[234:270]): 49161,
	_CipherSuitesTypeName[270:306]:                  49162,
	strings.ToLower(_CipherSuitesTypeName[270:306]): 49162,
	_CipherSuitesTypeName[306:336]:                  49169,
	strings.ToLower(_CipherSuitesTypeName[306:336]): 49169,
	_CipherSuitesTypeName[336:371]:                  49170,
	strings.ToLower(_CipherSuitesTypeName[336:371]): 49170,
	_CipherSuitesTypeName[371:405]:                  49171,
	strings.ToLower(_CipherSuitesTypeName[371:405]): 49171,
	_CipherSuitesTypeName[405:439]:                  49172,
	strings.ToLower(_CipherSuitesTypeName[405:439]): 49172,
	_CipherSuitesTypeName[439:478]:                  49187,
	strings.ToLower(_CipherSuitesTypeName[439:478]): 49187,
	_CipherSuitesTypeName[478:515]:                  49191,
	strings.ToLower(_CipherSuitesTypeName[478:515]): 49191,
	_CipherSuitesTypeName[515:552]:                  49199,
	strings.ToLower(_CipherSuitesTypeName[515:552]): 49199,
	_CipherSuitesTypeName[552:591]:                  49195,
	strings.ToLower(_CipherSuitesTypeName[552:591]): 49195,
	_CipherSuitesTypeName[591:628]:                  49200,
	strings.ToLower(_CipherSuitesTypeName[591:628]): 49200,
	_CipherSuitesTypeName[628:667]:                  49196,
	strings.ToLower(_CipherSuitesTypeName[628:667]): 49196,
	_CipherSuitesTypeName[667:703]:                  52392,
	strings.ToLower(_CipherSuitesTypeName[667:703]): 52392,
	_CipherSuitesTypeName[703:741]:                  52393,
	strings.ToLower(_CipherSuitesTypeName[703:741]): 52393,
	_CipherSuitesTypeName[741:763]:                  4865,
	strings.ToLower(_CipherSuitesTypeName[741:763]): 4865,
	_CipherSuitesTypeName[763:785]:                  4866,
	strings.ToLower(_CipherSuitesTypeName[763:785]): 4866,
	_CipherSuitesTypeName[785:813]:                  4867,
	strings.ToLower(_CipherSuitesTypeName[785:813]): 4867,
	_CipherSuitesTypeName[813:830]:                  22016,
	strings.ToLower(_CipherSuitesTypeName[813:830]): 22016,
}

// ParseCipherSuitesType attempts to convert a string to a CipherSuitesType
func ParseCipherSuitesType(name string) (CipherSuitesType, error) {
	if x, ok := _CipherSuitesTypeValue[name]; ok {
		return x, nil
	}
	return CipherSuitesType(0), fmt.Errorf("%s is not a valid CipherSuitesType", name)
}

// MarshalText implements the text marshaller method
func (x *CipherSuitesType) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method
func (x *CipherSuitesType) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseCipherSuitesType(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}
