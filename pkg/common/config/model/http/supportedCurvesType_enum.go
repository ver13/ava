// Code generated by go-enum
// DO NOT EDIT!

package http

import (
	"fmt"
	"strings"
)

const (
	// SupportedCurvesTypeCurveP256 is a SupportedCurvesType of type CurveP256
	SupportedCurvesTypeCurveP256 SupportedCurvesType = iota + 23
	// SupportedCurvesTypeCurveP384 is a SupportedCurvesType of type CurveP384
	SupportedCurvesTypeCurveP384
	// SupportedCurvesTypeCurveP521 is a SupportedCurvesType of type CurveP521
	SupportedCurvesTypeCurveP521
	// SupportedCurvesTypeX25519 is a SupportedCurvesType of type X25519
	SupportedCurvesTypeX25519 SupportedCurvesType = iota + 26
)

const _SupportedCurvesTypeName = "CurveP256CurveP384CurveP521X25519"

var _SupportedCurvesTypeMap = map[SupportedCurvesType]string{
	23: _SupportedCurvesTypeName[0:9],
	24: _SupportedCurvesTypeName[9:18],
	25: _SupportedCurvesTypeName[18:27],
	29: _SupportedCurvesTypeName[27:33],
}

// String implements the Stringer interface.
func (x SupportedCurvesType) String() string {
	if str, ok := _SupportedCurvesTypeMap[x]; ok {
		return str
	}
	return fmt.Sprintf("SupportedCurvesType(%d)", x)
}

var _SupportedCurvesTypeValue = map[string]SupportedCurvesType{
	_SupportedCurvesTypeName[0:9]:                    23,
	strings.ToLower(_SupportedCurvesTypeName[0:9]):   23,
	_SupportedCurvesTypeName[9:18]:                   24,
	strings.ToLower(_SupportedCurvesTypeName[9:18]):  24,
	_SupportedCurvesTypeName[18:27]:                  25,
	strings.ToLower(_SupportedCurvesTypeName[18:27]): 25,
	_SupportedCurvesTypeName[27:33]:                  29,
	strings.ToLower(_SupportedCurvesTypeName[27:33]): 29,
}

// ParseSupportedCurvesType attempts to convert a string to a SupportedCurvesType
func ParseSupportedCurvesType(name string) (SupportedCurvesType, error) {
	if x, ok := _SupportedCurvesTypeValue[name]; ok {
		return x, nil
	}
	return SupportedCurvesType(0), fmt.Errorf("%s is not a valid SupportedCurvesType", name)
}

// MarshalText implements the text marshaller method
func (x *SupportedCurvesType) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method
func (x *SupportedCurvesType) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseSupportedCurvesType(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}
