// Code generated by go-enum
// DO NOT EDIT!

package http

import (
	"fmt"
	"strings"
)

const (
	// SupportedVersionsTypeTLS10 is a SupportedVersionsType of type TLS10
	SupportedVersionsTypeTLS10 SupportedVersionsType = iota + 769
	// SupportedVersionsTypeTLS11 is a SupportedVersionsType of type TLS11
	SupportedVersionsTypeTLS11
	// SupportedVersionsTypeTLS12 is a SupportedVersionsType of type TLS12
	SupportedVersionsTypeTLS12
	// SupportedVersionsTypeTLS13 is a SupportedVersionsType of type TLS13
	SupportedVersionsTypeTLS13
)

const _SupportedVersionsTypeName = "TLS10TLS11TLS12TLS13"

var _SupportedVersionsTypeMap = map[SupportedVersionsType]string{
	769: _SupportedVersionsTypeName[0:5],
	770: _SupportedVersionsTypeName[5:10],
	771: _SupportedVersionsTypeName[10:15],
	772: _SupportedVersionsTypeName[15:20],
}

// String implements the Stringer interface.
func (x SupportedVersionsType) String() string {
	if str, ok := _SupportedVersionsTypeMap[x]; ok {
		return str
	}
	return fmt.Sprintf("SupportedVersionsType(%d)", x)
}

var _SupportedVersionsTypeValue = map[string]SupportedVersionsType{
	_SupportedVersionsTypeName[0:5]:                    769,
	strings.ToLower(_SupportedVersionsTypeName[0:5]):   769,
	_SupportedVersionsTypeName[5:10]:                   770,
	strings.ToLower(_SupportedVersionsTypeName[5:10]):  770,
	_SupportedVersionsTypeName[10:15]:                  771,
	strings.ToLower(_SupportedVersionsTypeName[10:15]): 771,
	_SupportedVersionsTypeName[15:20]:                  772,
	strings.ToLower(_SupportedVersionsTypeName[15:20]): 772,
}

// ParseSupportedVersionsType attempts to convert a string to a SupportedVersionsType
func ParseSupportedVersionsType(name string) (SupportedVersionsType, error) {
	if x, ok := _SupportedVersionsTypeValue[name]; ok {
		return x, nil
	}
	return SupportedVersionsType(0), fmt.Errorf("%s is not a valid SupportedVersionsType", name)
}

// MarshalText implements the text marshaller method
func (x *SupportedVersionsType) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method
func (x *SupportedVersionsType) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseSupportedVersionsType(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}
